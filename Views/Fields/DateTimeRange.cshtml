@using Orchard.Utility.Extensions;
@using System.Linq;
@using MainBit.Fields.ViewModels;
@{
    string valueToDisplay = string.Empty;
    DateTimeRangeFieldViewModel viewModel = Model.Model;
    if (viewModel.DateTimeRanges != null)
    {
        string[] translatedValues = viewModel.DateTimeRanges.Select(v =>
            {
                var valueFormat = "";
                if (v.From.ShowDate && v.From.ShowTime && !v.To.ShowDate && v.To.ShowTime)
                {
                    valueFormat = "{0} {1}-{3}";
                }
                return string.Format(valueFormat, v.From.Date, v.From.Time, v.To.Date, v.To.Time);

            }).ToArray();
        string separator = T(", ").ToString();
        valueToDisplay = string.Join(separator, translatedValues);
    }
    if (!string.IsNullOrEmpty(valueToDisplay))
    {
        string name = Model.ContentField.DisplayName;
        <p class="datetimerange-field datetimerange-field-@name.HtmlClassify()">
            <span class="name">@name:</span>
            <span class="value">@Html.Raw(valueToDisplay)</span>
        </p>

    }
}